name: ci

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install JS deps
        run: npm ci

      - name: Compile schemas
        run: npm run schema:compile

      - name: Run compose on examples
        run: npm run compose

      - name: Composer duplicate provider failure
        run: |
          rm -rf ./tmp/dup-fail
          if node tm.mjs compose --compose ./examples/dup-provider/compose.fail.json --modules-root ./examples/modules --out ./tmp/dup-fail; then
            echo "expected tm compose to fail with E_DUP_PROVIDER" >&2
            exit 1
          fi

      - name: Composer duplicate provider resolution
        run: |
          rm -rf ./examples/dup-provider/winner
          node tm.mjs compose \
            --compose ./examples/dup-provider/compose.ok.json \
            --modules-root ./examples/modules \
            --out ./examples/dup-provider/winner \
            --explain

      - name: Compose examples â†’ winner workspace
        run: node runtimes/ts/composer/index.mjs --compose ./examples/compose.json --modules-root ./examples/modules --glue-root ./glue-catalog --out ./examples/winner

      - name: Gates (shipping) on modules
        run: node tm.mjs gates shipping --compose ./examples/compose.json --modules-root ./examples/modules

      - name: Gates (shipping) on winner with events
        run: |
          mkdir -p artifacts
          node tm.mjs gates shipping \
            --compose ./examples/compose.json \
            --modules-root ./examples/winner/modules \
            --emit-events \
            --events-out artifacts/events.ndjson \
            --strict-events \
            --hook-cmd "node scripts/echo-hook.mjs"

      - name: Validate gate events
        run: node scripts/validate-events.mjs artifacts/events.ndjson

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cargo check (ports/composer)
        run: |
          cd runtimes/rust/ports && cargo check
          cd ../composer && cargo check
