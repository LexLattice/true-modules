{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "schemas.json",
  "definitions": {
    "SessionContext": {
      "$id": "schema.SessionContext",
      "type": "object",
      "required": ["user_id", "org_id", "permissions"],
      "properties": {
        "user_id": { "type": "string", "minLength": 1 },
        "org_id": { "type": "string", "minLength": 1 },
        "permissions": {
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        },
        "locale": { "type": "string" }
      }
    },
    "ShellState": {
      "$id": "schema.ShellState",
      "type": "object",
      "required": ["active_view", "mode", "snapshot", "history"],
      "properties": {
        "active_view": { "type": "string", "enum": ["workflow", "history"] },
        "mode": { "type": "string", "enum": ["draft", "replay", "running"] },
        "snapshot": { "$ref": "schema.WorkflowSnapshot" },
        "history": { "$ref": "schema.RunHistoryList" },
        "updated_at": { "type": "string", "format": "date-time" }
      }
    },
    "ShellEvent": {
      "$id": "schema.ShellEvent",
      "type": "object",
      "required": ["type", "occurred_at", "payload"],
      "properties": {
        "type": { "type": "string", "enum": ["NAV", "CONFIG_EDIT", "RUN_START"] },
        "occurred_at": { "type": "string", "format": "date-time" },
        "payload": { "type": "object" },
        "actor_id": { "type": "string" }
      }
    },
    "WorkflowSnapshot": {
      "$id": "schema.WorkflowSnapshot",
      "type": "object",
      "required": ["run_id", "stages", "lineage", "updated_at", "stage_count"],
      "properties": {
        "run_id": { "type": "string" },
        "stage_count": { "type": "integer", "minimum": 1 },
        "updated_at": { "type": "string", "format": "date-time" },
        "manifest_version": { "type": "integer", "minimum": 0 },
        "lineage": {
          "type": "object",
          "required": ["valid"],
          "properties": {
            "valid": { "type": "boolean" },
            "dependencies": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["from", "to"],
                "properties": {
                  "from": { "type": "string" },
                  "to": { "type": "string" }
                }
              }
            }
          }
        },
        "stages": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["id", "name", "status", "artifacts"],
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "status": { "type": "string", "enum": ["pending", "running", "blocked", "failed", "completed"] },
              "started_at": { "type": "string", "format": "date-time" },
              "completed_at": { "type": "string", "format": "date-time" },
              "dependencies": {
                "type": "array",
                "items": { "type": "string" }
              },
              "artifacts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["label", "uri"],
                  "properties": {
                    "label": { "type": "string" },
                    "uri": { "type": "string", "format": "uri" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "RenderResult": {
      "$id": "schema.RenderResult",
      "type": "object",
      "required": ["sections", "last_refresh_latency_ms"],
      "properties": {
        "sections": { "type": "integer", "minimum": 1 },
        "last_refresh_latency_ms": { "type": "integer", "minimum": 0 },
        "warnings": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ConfigDraft": {
      "$id": "schema.ConfigDraft",
      "type": "object",
      "required": ["parameters", "meta"],
      "properties": {
        "parameters": {
          "type": "object",
          "required": ["variant_count", "brief_depth", "reviewer_bots", "follow_up_policy"],
          "properties": {
            "variant_count": { "type": "integer", "minimum": 1 },
            "brief_depth": { "type": "string", "enum": ["shallow", "standard", "deep"] },
            "reviewer_bots": {
              "type": "array",
              "items": { "type": "string" },
              "maxItems": 5
            },
            "follow_up_policy": { "type": "string", "enum": ["auto", "manual", "none"] }
          }
        },
        "meta": {
          "type": "object",
          "required": ["status", "source", "lock_version"],
          "properties": {
            "status": { "type": "string", "enum": ["draft", "ready", "invalid"] },
            "source": { "type": "string", "enum": ["operator", "codex", "history"] },
            "lock_version": { "type": "integer", "minimum": 0 },
            "notes": { "type": "string" }
          }
        }
      }
    },
    "RunConfigAck": {
      "$id": "schema.RunConfigAck",
      "type": "object",
      "required": ["accepted", "lock_version"],
      "properties": {
        "accepted": { "type": "boolean" },
        "lock_version": { "type": "integer", "minimum": 0 },
        "reasons": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CodexPromptSpec": {
      "$id": "schema.CodexPromptSpec",
      "type": "object",
      "required": ["intent", "prompt", "max_tokens", "policy"],
      "properties": {
        "intent": { "type": "string", "enum": ["brief", "requirement", "note"] },
        "prompt": { "type": "string" },
        "max_tokens": { "type": "integer", "minimum": 32, "maximum": 2048 },
        "policy": {
          "type": "object",
          "required": ["max_tokens", "temperature"],
          "properties": {
            "max_tokens": { "type": "integer", "minimum": 32, "maximum": 2048 },
            "temperature": { "type": "number", "minimum": 0, "maximum": 1 }
          }
        },
        "context": {
          "type": "object",
          "properties": {
            "run_id": { "type": "string" },
            "stage_id": { "type": "string" }
          }
        }
      }
    },
    "CodexDraft": {
      "$id": "schema.CodexDraft",
      "type": "object",
      "required": ["content", "tokens", "status", "metadata", "source"],
      "properties": {
        "content": { "type": "string" },
        "tokens": { "type": "integer", "minimum": 0 },
        "status": { "type": "string", "enum": ["draft", "ready", "blocked"] },
        "metadata": {
          "type": "object",
          "required": ["trace_id", "model"],
          "properties": {
            "trace_id": { "type": "string" },
            "model": { "type": "string" },
            "safety_flags": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        },
        "source": { "type": "string", "enum": ["codex"] }
      }
    },
    "ValidationReport": {
      "$id": "schema.ValidationReport",
      "type": "object",
      "required": ["issues"],
      "properties": {
        "issues": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["code", "message"],
            "properties": {
              "code": { "type": "string" },
              "message": { "type": "string" },
              "path": { "type": "string" }
            }
          }
        }
      }
    },
    "RunLocator": {
      "$id": "schema.RunLocator",
      "type": "object",
      "required": ["run_id", "mode", "expected_version"],
      "properties": {
        "run_id": { "type": "string" },
        "mode": { "type": "string", "enum": ["fresh", "replay"] },
        "expected_version": { "type": "integer", "minimum": 0 }
      }
    },
    "RunConfig": {
      "$id": "schema.RunConfig",
      "type": "object",
      "required": ["parameters", "meta"],
      "properties": {
        "parameters": { "$ref": "schema.ConfigDraft#/properties/parameters" },
        "meta": {
          "type": "object",
          "required": ["requestor_id", "lock_version", "notes"],
          "properties": {
            "requestor_id": { "type": "string" },
            "lock_version": { "type": "integer", "minimum": 0 },
            "notes": { "type": "string" }
          }
        }
      }
    },
    "StartAck": {
      "$id": "schema.StartAck",
      "type": "object",
      "required": ["started", "state", "timestamp"],
      "properties": {
        "started": { "type": "boolean" },
        "state": { "type": "string", "enum": ["running", "blocked", "failed"] },
        "timestamp": { "type": "string", "format": "date-time" },
        "message": { "type": "string" }
      }
    },
    "RunHistoryList": {
      "$id": "schema.RunHistoryList",
      "type": "object",
      "required": ["entries"],
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["run_id", "started_at", "operator_id", "config"],
            "properties": {
              "run_id": { "type": "string" },
              "started_at": { "type": "string", "format": "date-time" },
              "operator_id": { "type": "string" },
              "config": { "$ref": "schema.RunConfig" },
              "result": { "type": "string", "enum": ["success", "failed", "aborted"] }
            }
          }
        }
      }
    },
    "RunRecord": {
      "$id": "schema.RunRecord",
      "type": "object",
      "required": ["run_id", "version", "config", "status", "artifacts"],
      "properties": {
        "run_id": { "type": "string" },
        "version": { "type": "integer", "minimum": 1 },
        "config": { "$ref": "schema.RunConfig" },
        "status": { "type": "string", "enum": ["running", "completed", "failed"] },
        "artifacts": {
          "type": "array",
          "items": { "$ref": "schema.WorkflowSnapshot#/properties/stages/items/properties/artifacts/items" }
        },
        "sealed": { "type": "boolean" }
      }
    },
    "PersistAck": {
      "$id": "schema.PersistAck",
      "type": "object",
      "required": ["saved", "timestamp"],
      "properties": {
        "saved": { "type": "boolean" },
        "timestamp": { "type": "string", "format": "date-time" }
      }
    },
    "CodexCall": {
      "$id": "schema.CodexCall",
      "type": "object",
      "required": ["prompt", "policy", "trace"],
      "properties": {
        "prompt": { "$ref": "schema.CodexPromptSpec" },
        "policy": {
          "type": "object",
          "required": ["max_calls_per_minute"],
          "properties": {
            "max_calls_per_minute": { "type": "integer", "minimum": 1 }
          }
        },
        "trace": {
          "type": "object",
          "required": ["request_id", "user_id"],
          "properties": {
            "request_id": { "type": "string" },
            "user_id": { "type": "string" }
          }
        }
      }
    },
    "AccessRequest": {
      "$id": "schema.AccessRequest",
      "type": "object",
      "required": ["user_id", "permission", "context"],
      "properties": {
        "user_id": { "type": "string" },
        "permission": { "type": "string" },
        "context": {
          "type": "object",
          "properties": {
            "run_id": { "type": "string" },
            "org_id": { "type": "string" }
          }
        }
      }
    },
    "AccessGrant": {
      "$id": "schema.AccessGrant",
      "type": "object",
      "required": ["allowed", "granted"],
      "properties": {
        "allowed": { "type": "boolean" },
        "granted": {
          "type": "array",
          "items": { "type": "string" }
        },
        "expires_at": { "type": "string", "format": "date-time" }
      }
    },
    "ScriptInvocation": {
      "$id": "schema.ScriptInvocation",
      "type": "object",
      "required": ["script", "args", "env"],
      "properties": {
        "script": { "type": "string" },
        "args": {
          "type": "array",
          "items": { "type": "string" }
        },
        "env": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "timeout_seconds": { "type": "integer", "minimum": 1 }
      }
    },
    "ScriptResult": {
      "$id": "schema.ScriptResult",
      "type": "object",
      "required": ["exit_code", "status", "stdout", "stderr"],
      "properties": {
        "exit_code": { "type": "integer" },
        "status": { "type": "string", "enum": ["ok", "failed", "timeout"] },
        "stdout": { "type": "string" },
        "stderr": { "type": "string" },
        "artifacts": {
          "type": "array",
          "items": { "$ref": "schema.WorkflowSnapshot#/properties/stages/items/properties/artifacts/items" }
        }
      }
    }
  }
}
