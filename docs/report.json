{
  "summary": "Hardened the MCP smoke test to detect leaked tm-mcp-* directories in /tmp and added a --pretty flag to the Python shim for formatted JSON output.",
  "checklist": [
    {
      "id": "P1",
      "status": "implemented",
      "notes": "Smoke test now snapshots tm-mcp-* entries in /tmp and fails on leaks; Python shim exposes --pretty to control JSON indentation."
    }
  ],
  "architecture": {
    "components_added": [],
    "components_modified": [
      {
        "path": "mcp/tests/smoke.mjs",
        "reason": "Tracks prefixed /tmp directories before and after the run to surface leaks."
      },
      {
        "path": "python/tm_cli.py",
        "reason": "Extends argument parsing and JSON emission to honor a --pretty option."
      }
    ],
    "data_flow": "Smoke script snapshots /tmp/tm-mcp-* directories surrounding the fa\u00e7ade boot, while the Python shim routes tm CLI responses through a shared JSON dump that can indent output when requested.",
    "state_management": "Both changes operate on ephemeral snapshots (lists of directory names or transient CLI payloads); no persistent state is introduced.",
    "invariants": [
      "/tmp entries prefixed with tm-mcp- remain unchanged across the smoke run.",
      "python/tm_cli.py must always emit valid JSON on stdout regardless of formatting mode."
    ],
    "tradeoffs": [
      "Snapshotting names instead of filesystem metadata may miss changes to directory contents but keeps the check lightweight."
    ],
    "alternatives_considered": [
      {
        "option": "Automatically delete unexpected tm-mcp-* directories during the test",
        "rejected_because": "Would hide regressions in server cleanup behaviour that we want to detect."
      }
    ],
    "open_questions": []
  },
  "tests": {
    "added": [],
    "how_to_run": "node mcp/tests/smoke.mjs"
  },
  "metrics": {
    "files_changed": 3,
    "insertions": 63,
    "deletions": 26
  },
  "decisions": [
    {
      "option": "Fail the smoke test on tm-mcp-* leaks and support pretty JSON output in the Python shim",
      "rationale": "Catching temporary directory leaks protects CI hosts, and the pretty flag improves ergonomics without breaking automation.",
      "rejected_alternatives": [
        {
          "variant": "Leave the smoke test as-is and rely on manual checks",
          "reason": "Would miss regression coverage and keep Python responses less readable when debugging.",
          "confidence": 0.3
        }
      ]
    }
  ],
  "risks": [
    "Legitimate external processes creating tm-mcp-* directories during the run could trigger false positives."
  ],
  "residual_risks": [
    "Pretty output still depends on downstream tooling tolerating multi-line JSON."
  ],
  "followups": [],
  "todos": [],
  "confidence": 0.6
}
