{
  "summary": "Extended tm doctor with an --artifacts flag that persists doctor.json, refreshed contributor docs/templates to call the flag, and updated CI to rely on the CLI-managed artifact.",
  "checklist": [
    {
      "id": "P1",
      "status": "implemented",
      "notes": "Added CLI-managed artifact handling for doctor runs and aligned docs plus CI with the new workflow."
    }
  ],
  "architecture": {
    "components_added": [],
    "components_modified": [
      {
        "path": "tm.mjs",
        "reason": "Persist doctor results via --artifacts and surface write failures as doctor_artifact warnings."
      },
      {
        "path": ".github/workflows/ci.yml",
        "reason": "Invoke tm doctor with --artifacts so CI captures artifacts/doctor.json without shell redirection."
      },
      {
        "path": "docs/contributor-playbook.md",
        "reason": "Document how to run tm doctor with --artifacts and locate artifacts/doctor.json."
      },
      {
        "path": "templates/init/base/README.md",
        "reason": "Guide new workspaces to run tm doctor with --artifacts and retain the emitted JSON."
      },
      {
        "path": "docs/implementation-briefs.md",
        "reason": "Note the artifact emission contract for tm doctor in the feature brief."
      }
    ],
    "data_flow": "tm doctor now ensures the requested --artifacts directory exists, writes doctor.json beside the CLI JSON stream, and records doctor_artifact status in the payload for CI and local use.",
    "state_management": "Doctor diagnostics persist in artifacts/doctor.json by default; failed writes downgrade the doctor_artifact check to warn so operators can react.",
    "invariants": [
      "tm doctor must attempt to save doctor.json under the selected artifacts directory on every run.",
      "doctor_artifact moves to warn when the JSON payload cannot be written to disk."
    ],
    "tradeoffs": [
      "Embedding artifact writes in tm doctor centralizes ownership but requires filesystem access during diagnostics."
    ],
    "alternatives_considered": [
      {
        "option": "Keep artifact creation in CI shell scripts",
        "rejected_because": "Would leave contributors and automation to maintain separate redirection logic, increasing drift."
      }
    ],
    "open_questions": []
  },
  "tests": {
    "added": [],
    "how_to_run": "npm run schema:compile"
  },
  "metrics": {
    "files_changed": 6,
    "insertions": 97,
    "deletions": 71
  },
  "decisions": [
    {
      "option": "Have tm doctor manage artifacts/doctor.json via --artifacts",
      "rationale": "Keeps local runs, templates, and CI aligned on where the diagnostics live without extra scripting.",
      "rejected_alternatives": [
        {
          "variant": "Rely on stdout redirection per environment",
          "reason": "Divergent shell recipes would be harder to document and easy to forget outside CI.",
          "confidence": 0.5
        }
      ]
    }
  ],
  "risks": [
    "Read-only workspaces will still warn when doctor.json cannot be written."
  ],
  "residual_risks": [
    "CI keeps the doctor step non-blocking, so artifact warnings depend on human follow-up."
  ],
  "followups": [
    {
      "title": "Add regression coverage for doctor_artifact warnings",
      "priority": "P2",
      "owner": "tooling",
      "pointer": "tm.mjs#L1842"
    }
  ],
  "todos": [
    "Hook doctor.json into local automation that uploads artifacts for reviewers."
  ],
  "confidence": 0.7
}
