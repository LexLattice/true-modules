{
  "summary": "Sharpened the workflow console wiring: added a shared bootstrap seed, restored live artifact inspection, tightened error messaging, and replaced Playwright with a Vitest-powered DOM harness while documenting the new scripts and dependency trims.",
  "checklist": [
    {
      "id": "P1",
      "status": "implemented",
      "notes": "Upgraded service errors, artifact handling, dependency setup, and acceptance coverage to close the remaining console gaps."
    }
  ],
  "architecture": {
    "components_added": [
      {
        "name": "console bootstrap seed",
        "path": "apps/workflow-console/src/bootstrap.ts",
        "role": "workflow"
      },
      {
        "name": "vitest configuration",
        "path": "apps/workflow-console/vitest.config.ts",
        "role": "infra"
      },
      {
        "name": "DOM acceptance harness",
        "path": "apps/workflow-console/tests/acceptance/ui-console.spec.tsx",
        "role": "workflow"
      }
    ],
    "components_modified": [
      {
        "path": "apps/workflow-console/src/main.tsx",
        "reason": "Use the shared bootstrap helper so the entrypoint only mounts the shell."
      },
      {
        "path": "apps/workflow-console/src/services/cli-bridge.ts",
        "reason": "Describe kickoff conflicts with the manifest runId."
      },
      {
        "path": "apps/workflow-console/src/services/codex-adapter.ts",
        "reason": "Include the rejected prompt intent in guardrail errors."
      },
      {
        "path": "apps/workflow-console/src/services/history-store.ts",
        "reason": "Add contextual runId/userId details to thrown errors."
      },
      {
        "path": "apps/workflow-console/src/ui/workflow-surface.tsx",
        "reason": "Resolve live snapshot artifacts before falling back to history."
      },
      {
        "path": "apps/workflow-console/vite.config.ts",
        "reason": "Drop @vitejs/plugin-react in favor of automatic JSX settings."
      },
      {
        "path": "apps/workflow-console/package.json",
        "reason": "Trim scoped dev dependencies and expose vitest scripts."
      },
      {
        "path": "docs/ui-console.md",
        "reason": "Document the updated build, lint, and test commands."
      }
    ],
    "data_flow": "bootstrapConsole now seeds RunStateGateway and HistoryStore before the shell mounts, and WorkflowSurface inspects live stage artifacts first while telemetry continues to emit CLI, Codex, and replay events via TelemetryHub.",
    "state_management": "RunStateGateway maintains the active snapshot, HistoryStore still persists runs/defaults/audits with richer errors, and the UI keeps artifact state locally while consulting live snapshots prior to history lookups.",
    "invariants": [
      "Kickoff is blocked until manifests set readyForLaunch=true.",
      "Live artifact inspection must succeed even before history persistence.",
      "Telemetry events remain exposed through window.__tmTelemetry."
    ],
    "tradeoffs": [
      "Manual Vitest DOM harness replaces browser automation, so replay/export flows aren't exercised in a real browser.",
      "Removing @vitejs/plugin-react avoids blocked scopes but forgoes React fast refresh niceties."
    ],
    "alternatives_considered": [
      {
        "option": "Keep the Playwright acceptance suite",
        "rejected_because": "Registry access to scoped packages is denied, preventing npm install from completing."
      }
    ],
    "open_questions": [
      "Should the Playwright-based suite return once scoped packages become installable again?"
    ]
  },
  "tests": {
    "added": [
      "apps/workflow-console/tests/acceptance/ui-console.spec.tsx"
    ],
    "how_to_run": "npm run test --workspace apps/workflow-console"
  },
  "metrics": {
    "files_changed": 16,
    "insertions": 583,
    "deletions": 350
  },
  "decisions": [
    {
      "option": "Adopt a Vitest DOM harness for acceptance coverage",
      "rationale": "Provides deterministic coverage without relying on the blocked @playwright/test package while still exercising seeded console workflows.",
      "rejected_alternatives": [
        {
          "variant": "Retain Playwright with skipped specs",
          "reason": "Would leave T-UI scenarios unverified and npm install would continue to fail.",
          "confidence": 0.3
        }
      ]
    }
  ],
  "risks": [
    "Manual DOM harness may miss browser-only regressions."
  ],
  "residual_risks": [
    "package-lock.json still needs regeneration once the registry ban is lifted."
  ],
  "followups": [
    {
      "title": "Regenerate package-lock with full dependencies when registry access is restored",
      "priority": "P1",
      "owner": "platform",
      "pointer": "package.json"
    },
    {
      "title": "Reintroduce Playwright coverage after dependency mirror access returns",
      "priority": "P2",
      "owner": "qa",
      "pointer": "apps/workflow-console/tests/acceptance/ui-console.spec.tsx"
    }
  ],
  "todos": [
    "Restore @vitejs/plugin-react once dependency installs are permitted to regain fast refresh."
  ],
  "confidence": 0.4
}
